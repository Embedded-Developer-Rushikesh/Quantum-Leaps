//$file${AO::../Quantum_Leaps::Led_Control.h} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
//
// Model: Led_Control_Active_obj.qm
// File:  ${AO::../Quantum_Leaps::Led_Control.h}
//
// This code has been generated by QM 6.1.1 <www.state-machine.com/qm>.
// DO NOT EDIT THIS FILE MANUALLY. All your changes will be lost.
//
// SPDX-License-Identifier: GPL-3.0-or-later
//
// This generated code is open source software: you can redistribute it under
// the terms of the GNU General Public License as published by the Free
// Software Foundation.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
// more details.
//
// NOTE:
// Alternatively, this generated code may be distributed under the terms
// of Quantum Leaps commercial licenses, which expressly supersede the GNU
// General Public License and are specifically designed for licensees
// interested in retaining the proprietary status of their code.
//
// Contact information:
// <www.state-machine.com/licensing>
// <info@state-machine.com>
//
//$endhead${AO::../Quantum_Leaps::Led_Control.h} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#include"qpc.h"
#include"stm32f4xx.h"
#include"stdbool.h"
#include"main.h"
enum Led_Control_en{
TIMEOUT_SIG=Q_USER_SIG,
ON_SIG
};
//
#define BSP_TICKS_PER_SEC    100U
extern uint16_t LED_DIM;
extern uint16_t LED_MEDIUM;
extern uint16_t LED_FULL;
extern uint16_t  LED_OFF;
extern bool btn_pad_value;
//$declare${AO::LED_Intencity_Control} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv

//${AO::LED_Intencity_Control} ...............................................
void LED_Intencity_Control(uint16_t duty_uint16_t);
//$enddecl${AO::LED_Intencity_Control} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//$declare${AO::ctor_Led_Control} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv

//${AO::ctor_Led_Control} ....................................................
void ctor_Led_Control(void);
//$enddecl${AO::ctor_Led_Control} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//$declare${AO::Led_Contol} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv

//${AO::Led_Contol} ..........................................................
typedef struct Led_Contol {
// protected:
    QActive super;

// public:
    QTimeEvt timeEvt;
} Led_Contol;

extern Led_Contol  Led_Contol_obj;

// protected:
QState Led_Contol_initial(Led_Contol * const me, void const * const par);
QState Led_Contol_off(Led_Contol * const me, QEvt const * const e);
QState Led_Contol_On(Led_Contol * const me, QEvt const * const e);
//$enddecl${AO::Led_Contol} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//$declare${AO::super_Led_Control} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv

//${AO::super_Led_Control} ...................................................
extern QActive * const super_Led_Control;
//$enddecl${AO::super_Led_Control} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

//$declare${AO::Led_On} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv

//${AO::Led_On} ..............................................................
void Led_On(void);
//$enddecl${AO::Led_On} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//$declare${AO::Led_off} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv

//${AO::Led_off} .............................................................
void Led_off(void);
//$enddecl${AO::Led_off} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//$declare${AO::button} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv

//${AO::button} ..............................................................
typedef struct button {
// protected:
    QActive super;

// public:
    QTimeEvt timeEvt;

// private:
} button;

extern button button_obj;

// protected:
QState button_initial(button * const me, void const * const par);
QState button_button(button * const me, QEvt const * const e);
QState button_DIM(button * const me, QEvt const * const e);
QState button_MIDIUM(button * const me, QEvt const * const e);
QState button_FULL(button * const me, QEvt const * const e);
//$enddecl${AO::button} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//$declare${AO::button_ctor} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv

//${AO::button_ctor} .........................................................
void button_ctor(void);
//$enddecl${AO::button_ctor} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
//$declare${AO::super_button} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv

//${AO::super_button} ........................................................
extern QActive * const super_button;
//$enddecl${AO::super_button} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

